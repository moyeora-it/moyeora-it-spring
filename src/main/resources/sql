-- DROP SCHEMA public;

CREATE SCHEMA public AUTHORIZATION postgres;

-- DROP TYPE public."position";

CREATE TYPE public."position" AS ENUM (
	'PM',
	'PL',
	'AA',
	'TA',
	'DA',
	'QA',
	'FE',
	'BE',
	'FS');

-- DROP TYPE public."provider";

CREATE TYPE public."provider" AS ENUM (
	'KAKAO',
	'GOOGLE',
	'NAVER');

-- DROP TYPE public."skill";

CREATE TYPE public."skill" AS ENUM (
	'Java',
	'JavaScript',
	'HTML_CSS',
	'REACT',
	'Vue',
	'Kotlin',
	'Spring');

-- DROP SEQUENCE bookmark_id_seq;

CREATE SEQUENCE bookmark_id_seq
	INCREMENT BY 1
	MINVALUE 1
	MAXVALUE 2147483647
	START 1
	CACHE 1
	NO CYCLE;
-- DROP SEQUENCE follow_id_seq;

CREATE SEQUENCE follow_id_seq
	INCREMENT BY 1
	MINVALUE 1
	MAXVALUE 2147483647
	START 1
	CACHE 1
	NO CYCLE;
-- DROP SEQUENCE group_id_seq;

CREATE SEQUENCE group_id_seq
	INCREMENT BY 1
	MINVALUE 1
	MAXVALUE 2147483647
	START 1
	CACHE 1
	NO CYCLE;
-- DROP SEQUENCE notification_id_seq;

CREATE SEQUENCE notification_id_seq
	INCREMENT BY 1
	MINVALUE 1
	MAXVALUE 2147483647
	START 1
	CACHE 1
	NO CYCLE;
-- DROP SEQUENCE rating_id_seq;

CREATE SEQUENCE rating_id_seq
	INCREMENT BY 1
	MINVALUE 1
	MAXVALUE 2147483647
	START 1
	CACHE 1
	NO CYCLE;
-- DROP SEQUENCE reply_id_seq;

CREATE SEQUENCE reply_id_seq
	INCREMENT BY 1
	MINVALUE 1
	MAXVALUE 2147483647
	START 1
	CACHE 1
	NO CYCLE;
-- DROP SEQUENCE user_id_seq;

CREATE SEQUENCE user_id_seq
	INCREMENT BY 1
	MINVALUE 1
	MAXVALUE 2147483647
	START 1
	CACHE 1
	NO CYCLE;
-- DROP SEQUENCE waiting_list_id_seq;

CREATE SEQUENCE waiting_list_id_seq
	INCREMENT BY 1
	MINVALUE 1
	MAXVALUE 2147483647
	START 1
	CACHE 1
	NO CYCLE;-- public._prisma_migrations definition

-- Drop table

-- DROP TABLE _prisma_migrations;

CREATE TABLE _prisma_migrations (
	id varchar(36) NOT NULL,
	checksum varchar(64) NOT NULL,
	finished_at timestamptz NULL,
	migration_name varchar(255) NOT NULL,
	logs text NULL,
	rolled_back_at timestamptz NULL,
	started_at timestamptz DEFAULT now() NOT NULL,
	applied_steps_count int4 DEFAULT 0 NOT NULL,
	CONSTRAINT _prisma_migrations_pkey PRIMARY KEY (id)
);


-- public."group" definition

-- Drop table

-- DROP TABLE "group";

CREATE TABLE "group" (
	id serial4 NOT NULL,
	title text NOT NULL,
	deadline timestamp(3) NOT NULL,
	start_date timestamp(3) NOT NULL,
	"content" text NOT NULL,
	end_date timestamp(3) NOT NULL,
	max_participants int4 NOT NULL,
	positions public._position NULL,
	first_user_id int4 NULL,
	"views" int4 DEFAULT 0 NOT NULL,
	skills public._skill NULL,
	"type" text NOT NULL,
	status bool DEFAULT true NOT NULL,
	auto_allow bool NOT NULL,
	created_at timestamp(3) DEFAULT CURRENT_TIMESTAMP NOT NULL,
	updated_at timestamp(3) NOT NULL,
	CONSTRAINT group_pkey PRIMARY KEY (id)
);


-- public."user" definition

-- Drop table

-- DROP TABLE "user";

CREATE TABLE "user" (
	id serial4 NOT NULL,
	email text NULL,
	"password" text NULL,
	nickname text NULL,
	profile_image text NULL,
	"provider" public."provider" NULL,
	provider_id text NULL,
	created_at timestamp(3) DEFAULT CURRENT_TIMESTAMP NOT NULL,
	updated_at timestamp(3) NOT NULL,
	is_deleted bool DEFAULT false NOT NULL,
	"position" public."position" NULL,
	skills public._skill NULL,
	email_authentication int4 NULL,
	CONSTRAINT user_pkey PRIMARY KEY (id)
);
CREATE UNIQUE INDEX user_email_key ON public."user" USING btree (email);


-- public."_groupTouser" definition

-- Drop table

-- DROP TABLE "_groupTouser";

CREATE TABLE "_groupTouser" (
	"A" int4 NOT NULL,
	"B" int4 NOT NULL,
	CONSTRAINT "_groupTouser_A_fkey" FOREIGN KEY ("A") REFERENCES "group"(id) ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT "_groupTouser_B_fkey" FOREIGN KEY ("B") REFERENCES "user"(id) ON DELETE CASCADE ON UPDATE CASCADE
);
CREATE UNIQUE INDEX "_groupTouser_AB_unique" ON public."_groupTouser" USING btree ("A", "B");
CREATE INDEX "_groupTouser_B_index" ON public."_groupTouser" USING btree ("B");


-- public.bookmark definition

-- Drop table

-- DROP TABLE bookmark;

CREATE TABLE bookmark (
	id serial4 NOT NULL,
	created_at timestamp(3) DEFAULT CURRENT_TIMESTAMP NOT NULL,
	updated_at timestamp(3) NOT NULL,
	user_id int4 NULL,
	group_id int4 NULL,
	CONSTRAINT bookmark_pkey PRIMARY KEY (id),
	CONSTRAINT bookmark_group_id_fkey FOREIGN KEY (group_id) REFERENCES "group"(id) ON DELETE SET NULL ON UPDATE CASCADE,
	CONSTRAINT bookmark_user_id_fkey FOREIGN KEY (user_id) REFERENCES "user"(id) ON DELETE SET NULL ON UPDATE CASCADE
);


-- public.follow definition

-- Drop table

-- DROP TABLE follow;

CREATE TABLE follow (
	id serial4 NOT NULL,
	follower_id int4 NULL,
	following_id int4 NULL,
	created_at timestamp(3) DEFAULT CURRENT_TIMESTAMP NOT NULL,
	updated_at timestamp(3) NOT NULL,
	CONSTRAINT follow_pkey PRIMARY KEY (id),
	CONSTRAINT follow_follower_id_fkey FOREIGN KEY (follower_id) REFERENCES "user"(id) ON DELETE SET NULL ON UPDATE CASCADE,
	CONSTRAINT follow_following_id_fkey FOREIGN KEY (following_id) REFERENCES "user"(id) ON DELETE SET NULL ON UPDATE CASCADE
);
CREATE UNIQUE INDEX follow_follower_id_following_id_key ON public.follow USING btree (follower_id, following_id);


-- public.notification definition

-- Drop table

-- DROP TABLE notification;

CREATE TABLE notification (
	id serial4 NOT NULL,
	created_at timestamp(3) DEFAULT CURRENT_TIMESTAMP NOT NULL,
	updated_at timestamp(3) NOT NULL,
	"content" text NOT NULL,
	user_id int4 NULL,
	"read" bool NOT NULL,
	CONSTRAINT notification_pkey PRIMARY KEY (id),
	CONSTRAINT notification_user_id_fkey FOREIGN KEY (user_id) REFERENCES "user"(id) ON DELETE SET NULL ON UPDATE CASCADE
);


-- public.rating definition

-- Drop table

-- DROP TABLE rating;

CREATE TABLE rating (
	id serial4 NOT NULL,
	created_at timestamp(3) DEFAULT CURRENT_TIMESTAMP NOT NULL,
	updated_at timestamp(3) NOT NULL,
	user_id int4 NULL,
	rating int4 NOT NULL,
	CONSTRAINT rating_pkey PRIMARY KEY (id),
	CONSTRAINT rating_user_id_fkey FOREIGN KEY (user_id) REFERENCES "user"(id) ON DELETE CASCADE ON UPDATE CASCADE
);


-- public.reply definition

-- Drop table

-- DROP TABLE reply;

CREATE TABLE reply (
	id serial4 NOT NULL,
	"content" text NOT NULL,
	parent_id int4 NULL,
	is_deleted bool DEFAULT false NOT NULL,
	created_at timestamp(3) DEFAULT CURRENT_TIMESTAMP NOT NULL,
	updated_at timestamp(3) NOT NULL,
	user_id int4 NULL,
	group_id int4 NULL,
	CONSTRAINT reply_pkey PRIMARY KEY (id),
	CONSTRAINT reply_group_id_fkey FOREIGN KEY (group_id) REFERENCES "group"(id) ON DELETE SET NULL ON UPDATE CASCADE,
	CONSTRAINT reply_user_id_fkey FOREIGN KEY (user_id) REFERENCES "user"(id) ON DELETE SET NULL ON UPDATE CASCADE
);


-- public.waiting_list definition

-- Drop table

-- DROP TABLE waiting_list;

CREATE TABLE waiting_list (
	id serial4 NOT NULL,
	created_at timestamp(3) DEFAULT CURRENT_TIMESTAMP NOT NULL,
	updated_at timestamp(3) NOT NULL,
	user_id int4 NULL,
	group_id int4 NULL,
	status bool DEFAULT false NOT NULL,
	CONSTRAINT waiting_list_pkey PRIMARY KEY (id),
	CONSTRAINT waiting_list_group_id_fkey FOREIGN KEY (group_id) REFERENCES "group"(id) ON DELETE SET NULL ON UPDATE CASCADE,
	CONSTRAINT waiting_list_user_id_fkey FOREIGN KEY (user_id) REFERENCES "user"(id) ON DELETE SET NULL ON UPDATE CASCADE
);

-- =========================================================

ALTER TABLE "user"
ALTER COLUMN skills TYPE TEXT
USING array_to_string(skills, ',');

alter table "group"
alter column skills type text[]
USING skills::TEXT[];